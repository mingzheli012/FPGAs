--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 22.1 cbx_cycloneii 2023:07:21:07:12:21:SC cbx_lpm_add_sub 2023:07:21:07:12:21:SC cbx_lpm_compare 2023:07:21:07:12:21:SC cbx_lpm_decode 2023:07:21:07:12:20:SC cbx_mgl 2023:07:21:07:12:36:SC cbx_nadder 2023:07:21:07:12:21:SC cbx_stratix 2023:07:21:07:12:21:SC cbx_stratixii 2023:07:21:07:12:21:SC  VERSION_END


-- Copyright (C) 2023  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 18 
SUBDESIGN decode_bua
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode461w[1..0]	: WIRE;
	w_anode470w[3..0]	: WIRE;
	w_anode487w[3..0]	: WIRE;
	w_anode497w[3..0]	: WIRE;
	w_anode507w[3..0]	: WIRE;
	w_anode517w[3..0]	: WIRE;
	w_anode527w[3..0]	: WIRE;
	w_anode537w[3..0]	: WIRE;
	w_anode547w[3..0]	: WIRE;
	w_anode559w[1..0]	: WIRE;
	w_anode566w[3..0]	: WIRE;
	w_anode577w[3..0]	: WIRE;
	w_anode587w[3..0]	: WIRE;
	w_anode597w[3..0]	: WIRE;
	w_anode607w[3..0]	: WIRE;
	w_anode617w[3..0]	: WIRE;
	w_anode627w[3..0]	: WIRE;
	w_anode637w[3..0]	: WIRE;
	w_data459w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode637w[3..3], w_anode627w[3..3], w_anode617w[3..3], w_anode607w[3..3], w_anode597w[3..3], w_anode587w[3..3], w_anode577w[3..3], w_anode566w[3..3]), ( w_anode547w[3..3], w_anode537w[3..3], w_anode527w[3..3], w_anode517w[3..3], w_anode507w[3..3], w_anode497w[3..3], w_anode487w[3..3], w_anode470w[3..3]));
	w_anode461w[] = ( (w_anode461w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode470w[] = ( (w_anode470w[2..2] & (! w_data459w[2..2])), (w_anode470w[1..1] & (! w_data459w[1..1])), (w_anode470w[0..0] & (! w_data459w[0..0])), w_anode461w[1..1]);
	w_anode487w[] = ( (w_anode487w[2..2] & (! w_data459w[2..2])), (w_anode487w[1..1] & (! w_data459w[1..1])), (w_anode487w[0..0] & w_data459w[0..0]), w_anode461w[1..1]);
	w_anode497w[] = ( (w_anode497w[2..2] & (! w_data459w[2..2])), (w_anode497w[1..1] & w_data459w[1..1]), (w_anode497w[0..0] & (! w_data459w[0..0])), w_anode461w[1..1]);
	w_anode507w[] = ( (w_anode507w[2..2] & (! w_data459w[2..2])), (w_anode507w[1..1] & w_data459w[1..1]), (w_anode507w[0..0] & w_data459w[0..0]), w_anode461w[1..1]);
	w_anode517w[] = ( (w_anode517w[2..2] & w_data459w[2..2]), (w_anode517w[1..1] & (! w_data459w[1..1])), (w_anode517w[0..0] & (! w_data459w[0..0])), w_anode461w[1..1]);
	w_anode527w[] = ( (w_anode527w[2..2] & w_data459w[2..2]), (w_anode527w[1..1] & (! w_data459w[1..1])), (w_anode527w[0..0] & w_data459w[0..0]), w_anode461w[1..1]);
	w_anode537w[] = ( (w_anode537w[2..2] & w_data459w[2..2]), (w_anode537w[1..1] & w_data459w[1..1]), (w_anode537w[0..0] & (! w_data459w[0..0])), w_anode461w[1..1]);
	w_anode547w[] = ( (w_anode547w[2..2] & w_data459w[2..2]), (w_anode547w[1..1] & w_data459w[1..1]), (w_anode547w[0..0] & w_data459w[0..0]), w_anode461w[1..1]);
	w_anode559w[] = ( (w_anode559w[0..0] & data_wire[3..3]), enable_wire);
	w_anode566w[] = ( (w_anode566w[2..2] & (! w_data459w[2..2])), (w_anode566w[1..1] & (! w_data459w[1..1])), (w_anode566w[0..0] & (! w_data459w[0..0])), w_anode559w[1..1]);
	w_anode577w[] = ( (w_anode577w[2..2] & (! w_data459w[2..2])), (w_anode577w[1..1] & (! w_data459w[1..1])), (w_anode577w[0..0] & w_data459w[0..0]), w_anode559w[1..1]);
	w_anode587w[] = ( (w_anode587w[2..2] & (! w_data459w[2..2])), (w_anode587w[1..1] & w_data459w[1..1]), (w_anode587w[0..0] & (! w_data459w[0..0])), w_anode559w[1..1]);
	w_anode597w[] = ( (w_anode597w[2..2] & (! w_data459w[2..2])), (w_anode597w[1..1] & w_data459w[1..1]), (w_anode597w[0..0] & w_data459w[0..0]), w_anode559w[1..1]);
	w_anode607w[] = ( (w_anode607w[2..2] & w_data459w[2..2]), (w_anode607w[1..1] & (! w_data459w[1..1])), (w_anode607w[0..0] & (! w_data459w[0..0])), w_anode559w[1..1]);
	w_anode617w[] = ( (w_anode617w[2..2] & w_data459w[2..2]), (w_anode617w[1..1] & (! w_data459w[1..1])), (w_anode617w[0..0] & w_data459w[0..0]), w_anode559w[1..1]);
	w_anode627w[] = ( (w_anode627w[2..2] & w_data459w[2..2]), (w_anode627w[1..1] & w_data459w[1..1]), (w_anode627w[0..0] & (! w_data459w[0..0])), w_anode559w[1..1]);
	w_anode637w[] = ( (w_anode637w[2..2] & w_data459w[2..2]), (w_anode637w[1..1] & w_data459w[1..1]), (w_anode637w[0..0] & w_data459w[0..0]), w_anode559w[1..1]);
	w_data459w[2..0] = data_wire[2..0];
END;
--VALID FILE
